@model DMLCatalog.Models.dmlcatalog

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>
@ViewBag.error


    @using (Html.BeginForm("Create", "dmlcatalogs", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>dmlcatalog</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })


            <div class="form-group">
                @Html.LabelFor(model => model.id, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.id, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.id, "", new { @class = "text-danger" })
                </div>
            </div>
            @{string name = "Имя";
                string version = "Версия";
                string desc = "Описание";
            }
            <div class="form-group">
                @Html.Label(name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.guid, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    @Html.EditorFor(model => model.guid, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

                    @Html.ValidationMessageFor(model => model.guid, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label(version, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.version, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.version, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label(desc, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">


                    @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.stateid, "Состояние", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("stateid", null, "Выберите...", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.stateid, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.typeid, "Тип", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("typeid", null, "Выберите...", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.typeid, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.publisherid, "Разработчик", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("publisherid", null, "Выберите...", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.publisherid, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.localizeid, "Язык", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("localizeid", null, "Выберите...", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.localizeid, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>

        </div>
    }



    <div>
        @Html.ActionLink("Загрузить информацию из файла", "Upload")
    </div>

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
